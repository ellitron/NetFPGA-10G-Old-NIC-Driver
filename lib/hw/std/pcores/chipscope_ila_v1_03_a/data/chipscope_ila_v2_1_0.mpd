#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : chipscope_ila
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN chipscope_ila

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IPLEVEL_DRC_PROC = ila_drc
OPTION ELABORATE_PROC = ila_generate
OPTION LAST_UPDATED = 12.3
OPTION DESC = Chipscope Integrated Logic Analyzer (ILA)
OPTION LONG_DESC = The Chipscope Integrated Logic Analyzer (ILA) core is used to monitor internal FPGA signals in real time.
OPTION IP_GROUP = Debug:MICROBLAZE:PPC
OPTION HDL = MIXED


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = string
PARAMETER C_DEVICE = xc5vlx50, DT = string
PARAMETER C_PACKAGE = ffg676, DT = string
PARAMETER C_SPEEDGRADE = -11, DT = string
PARAMETER C_NUM_DATA_SAMPLES = 1024, DT = integer, RANGE = (512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072)
PARAMETER C_DATA_SAME_AS_TRIGGER = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DATA_IN_WIDTH = 32, DT = integer, RANGE = (1:1024), ISVALID = (C_DATA_SAME_AS_TRIGGER == 0)
PARAMETER C_ENABLE_TRIGGER_OUT = 1, DT = integer, RANGE = (0,1)
PARAMETER C_DISABLE_RPM = 0, DT = integer, RANGE = (0,1)
PARAMETER C_RISING_CLOCK_EDGE = 1, DT = integer, RANGE = (0,1)
PARAMETER C_MAX_SEQUENCER_LEVELS = 1, DT = integer, RANGE = (1:16)
PARAMETER C_ENABLE_STORAGE_QUALIFICATION = 1, DT = integer, RANGE = (0,1)
PARAMETER C_TRIG0_UNITS = 1, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG0_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG0_UNITS >= 1)
PARAMETER C_TRIG0_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG0_UNITS >= 1)
PARAMETER C_TRIG0_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG0_UNITS >= 1)
PARAMETER C_TRIG1_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG1_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG1_UNITS >= 1)
PARAMETER C_TRIG1_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG1_UNITS >= 1)
PARAMETER C_TRIG1_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG1_UNITS >= 1)
PARAMETER C_TRIG2_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG2_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG2_UNITS >= 1)
PARAMETER C_TRIG2_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG2_UNITS >= 1)
PARAMETER C_TRIG2_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG2_UNITS >= 1)
PARAMETER C_TRIG3_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG3_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG3_UNITS >= 1)
PARAMETER C_TRIG3_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG3_UNITS >= 1)
PARAMETER C_TRIG3_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG3_UNITS >= 1)
PARAMETER C_TRIG4_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG4_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG4_UNITS >= 1)
PARAMETER C_TRIG4_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG4_UNITS >= 1)
PARAMETER C_TRIG4_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG4_UNITS >= 1)
PARAMETER C_TRIG5_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG5_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG5_UNITS >= 1)
PARAMETER C_TRIG5_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG5_UNITS >= 1)
PARAMETER C_TRIG5_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG5_UNITS >= 1)
PARAMETER C_TRIG6_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG6_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG6_UNITS >= 1)
PARAMETER C_TRIG6_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG6_UNITS >= 1)
PARAMETER C_TRIG6_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG6_UNITS >= 1)
PARAMETER C_TRIG7_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG7_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG7_UNITS >= 1)
PARAMETER C_TRIG7_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG7_UNITS >= 1)
PARAMETER C_TRIG7_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG7_UNITS >= 1)
PARAMETER C_TRIG8_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG8_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG8_UNITS >= 1)
PARAMETER C_TRIG8_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG8_UNITS >= 1)
PARAMETER C_TRIG8_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG8_UNITS >= 1)
PARAMETER C_TRIG9_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG9_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG9_UNITS >= 1)
PARAMETER C_TRIG9_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG9_UNITS >= 1)
PARAMETER C_TRIG9_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG9_UNITS >= 1)
PARAMETER C_TRIG10_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG10_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG10_UNITS >= 1)
PARAMETER C_TRIG10_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG10_UNITS >= 1)
PARAMETER C_TRIG10_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG10_UNITS >= 1)
PARAMETER C_TRIG11_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG11_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG11_UNITS >= 1)
PARAMETER C_TRIG11_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG11_UNITS >= 1)
PARAMETER C_TRIG11_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG11_UNITS >= 1)
PARAMETER C_TRIG12_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG12_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG12_UNITS >= 1)
PARAMETER C_TRIG12_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG12_UNITS >= 1)
PARAMETER C_TRIG12_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG12_UNITS >= 1)
PARAMETER C_TRIG13_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG13_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG13_UNITS >= 1)
PARAMETER C_TRIG13_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG13_UNITS >= 1)
PARAMETER C_TRIG13_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG13_UNITS >= 1)
PARAMETER C_TRIG14_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG14_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG14_UNITS >= 1)
PARAMETER C_TRIG14_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG14_UNITS >= 1)
PARAMETER C_TRIG14_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG14_UNITS >= 1)
PARAMETER C_TRIG15_UNITS = 0, DT = integer, RANGE = (0:16)
PARAMETER C_TRIG15_TRIGGER_IN_WIDTH = 8, DT = integer, RANGE = (1:1024), ISVALID = (C_TRIG15_UNITS >= 1)
PARAMETER C_TRIG15_UNIT_COUNTER_WIDTH = 0, DT = integer, RANGE = (0:32), ISVALID = (C_TRIG15_UNITS >= 1)
PARAMETER C_TRIG15_UNIT_MATCH_TYPE = basic, DT = string, VALUES = (basic=basic, basic with edges=basic with edges, extended=extended, extended with edges=extended with edges, range=range, range with edges=range with edges), ISVALID = (C_TRIG15_UNITS >= 1)

## Ports
PORT CHIPSCOPE_ILA_CONTROL = "", DIR = I, VEC = [35:0]
PORT CLK = "", DIR = I, SIGIS = CLK
PORT DATA = "", DIR = I, VEC = [(C_DATA_IN_WIDTH-1):0]
PORT TRIG0 = "", DIR = I, VEC = [(C_TRIG0_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG0_UNITS >= 1)
PORT TRIG1 = "", DIR = I, VEC = [(C_TRIG1_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG1_UNITS >= 1)
PORT TRIG2 = "", DIR = I, VEC = [(C_TRIG2_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG2_UNITS >= 1)
PORT TRIG3 = "", DIR = I, VEC = [(C_TRIG3_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG3_UNITS >= 1)
PORT TRIG4 = "", DIR = I, VEC = [(C_TRIG4_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG4_UNITS >= 1)
PORT TRIG5 = "", DIR = I, VEC = [(C_TRIG5_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG5_UNITS >= 1)
PORT TRIG6 = "", DIR = I, VEC = [(C_TRIG6_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG6_UNITS >= 1)
PORT TRIG7 = "", DIR = I, VEC = [(C_TRIG7_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG7_UNITS >= 1)
PORT TRIG8 = "", DIR = I, VEC = [(C_TRIG8_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG8_UNITS >= 1)
PORT TRIG9 = "", DIR = I, VEC = [(C_TRIG9_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG9_UNITS >= 1)
PORT TRIG10 = "", DIR = I, VEC = [(C_TRIG10_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG10_UNITS >= 1)
PORT TRIG11 = "", DIR = I, VEC = [(C_TRIG11_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG11_UNITS >= 1)
PORT TRIG12 = "", DIR = I, VEC = [(C_TRIG12_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG12_UNITS >= 1)
PORT TRIG13 = "", DIR = I, VEC = [(C_TRIG13_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG13_UNITS >= 1)
PORT TRIG14 = "", DIR = I, VEC = [(C_TRIG14_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG14_UNITS >= 1)
PORT TRIG15 = "", DIR = I, VEC = [(C_TRIG15_TRIGGER_IN_WIDTH-1):0], ISVALID = (C_TRIG15_UNITS >= 1)
PORT TRIG_OUT = "", DIR = O

END
